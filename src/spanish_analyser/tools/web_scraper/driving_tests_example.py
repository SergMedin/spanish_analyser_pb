#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω—è–µ—Ç –≤–∞—à —Å—Ç–∞—Ä—ã–π downloader.ipynb –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç,
–∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–µ—Å—Ç—ã –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é —Å —Å–∞–π—Ç–∞ practicatest.com
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent))

from web_scraper import HTMLDownloader, ScrapingManager


def download_driving_tests_basic():
    """
    –ë–∞–∑–æ–≤—ã–π —Å–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é
    (–∞–Ω–∞–ª–æ–≥ –≤–∞—à–µ–≥–æ —Å—Ç–∞—Ä–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
    """
    print("=== –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é (–±–∞–∑–æ–≤—ã–π —Å–ø–æ—Å–æ–±) ===\n")
    
    # –°–æ–∑–¥–∞—ë–º –∑–∞–≥—Ä—É–∑—á–∏–∫ –¥–ª—è —Å–∞–π—Ç–∞ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é
    downloader = HTMLDownloader(
        base_url="https://practicatest.com/tests/permiso-B/online",
        save_path="./data/driving_tests",
        delay_range=(3, 7),  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è —É–≤–∞–∂–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
        max_retries=3
    )
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º 50 —Å—Ç—Ä–∞–Ω–∏—Ü (–∫–∞–∫ –≤ –≤–∞—à–µ–º —Å—Ç–∞—Ä–æ–º —Å–∫—Ä–∏–ø—Ç–µ)
        print("–ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É 50 —Å—Ç—Ä–∞–Ω–∏—Ü —Å —Ç–µ—Å—Ç–∞–º–∏...")
        print("–ò—Å–ø–æ–ª—å–∑—É—é –∑–∞–¥–µ—Ä–∂–∫–∏ 3-7 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —É–≤–∞–∂–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞\n")
        
        downloaded_files = downloader.download_multiple_pages(
            num_pages=50,
            filename_pattern="driving_test_{}.html",
            delay=True
        )
        
        print(f"\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(downloaded_files)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = downloader.get_stats()
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:")
        print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {stats['successful']}")
        print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö: {stats['failed']}")
        print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['success_rate_percent']}%")
        print(f"   –ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {stats['save_path']}")
        
        return downloaded_files
        
    finally:
        downloader.close()


def download_driving_tests_advanced():
    """
    –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–ø–æ—Å–æ–± —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    """
    print("\n=== –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é (–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–ø–æ—Å–æ–±) ===\n")
    
    # –°–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    manager = ScrapingManager(
        base_url="https://practicatest.com/tests/permiso-B/online",
        save_path="./data/driving_tests_advanced"
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Å—Å–∏—é —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    print("–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–µ—Å—Å–∏—é —Å–∫—Ä–∞–ø–∏–Ω–≥–∞...")
    session_result = manager.start_scraping_session(
        session_name="driving_tests_advanced",
        num_pages=25,  # –ú–µ–Ω—å—à–µ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        delay_range=(4, 8),  # –ï—â—ë –±–æ–ª–µ–µ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏
        filename_pattern="advanced_test_{}.html"
    )
    
    print(f"‚úÖ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {session_result['status']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if 'stats' in session_result:
        stats = session_result['stats']
        print(f"\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: {stats['successful']}")
        print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: {stats['failed']}")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
        print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats['success_rate_percent']}%")
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    manager.export_metadata_to_csv("driving_tests_summary.csv")
    print(f"\nüìÅ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ CSV")
    
    return session_result


def download_with_parameters():
    """
    –ü—Ä–∏–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    """
    print("\n=== –ó–∞–≥—Ä—É–∑–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ===\n")
    
    manager = ScrapingManager(
        base_url="https://practicatest.com/tests/permiso-B/online",
        save_path="./data/driving_tests_parameters"
    )
    
    # –°–ø–∏—Å–æ–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    test_parameters = [
        {"category": "traffic_signs", "level": "basic"},
        {"category": "traffic_rules", "level": "intermediate"},
        {"category": "safety", "level": "advanced"},
        {"category": "emergency", "level": "expert"}
    ]
    
    print("–ó–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
    session_result = manager.scrape_with_parameters(
        session_name="parameter_based_tests",
        parameters_list=test_parameters,
        delay_range=(3, 6)
    )
    
    print(f"‚úÖ –°–∫—Ä–∞–ø–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–≤–µ—Ä—à—ë–Ω: {session_result['status']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if 'results' in session_result:
        print(f"\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏:")
        for result in session_result['results']:
            status_emoji = "‚úÖ" if result['status'] == 'success' else "‚ùå"
            params_str = ", ".join([f"{k}={v}" for k, v in result['params'].items()])
            print(f"   {status_emoji} {result['filename']}: {params_str}")
    
    return session_result


def show_final_summary():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É –ø–æ –≤—Å–µ–º —Å–µ—Å—Å–∏—è–º"""
    print("\n=== –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ ===\n")
    
    # –°–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    manager = ScrapingManager(
        base_url="https://practicatest.com/tests/permiso-B/online",
        save_path="./data"
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_stats = manager.get_total_stats()
    
    print("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —Å–µ—Å—Å–∏—è–º:")
    print(f"   –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {total_stats['total_sessions']}")
    print(f"   –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö: {total_stats['completed_sessions']}")
    print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö: {total_stats['failed_sessions']}")
    print(f"   –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_stats['total_downloaded_files']}")
    print(f"   –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {total_stats['average_success_rate']}%")
    print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {total_stats['last_updated']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–µ—Å—Å–∏—è–º
    sessions_summary = manager.get_all_sessions_summary()
    if sessions_summary:
        print(f"\nüìã –°–≤–æ–¥–∫–∞ –ø–æ —Å–µ—Å—Å–∏—è–º:")
        for session in sessions_summary:
            status_emoji = "‚úÖ" if session['status'] == 'completed' else "‚ùå"
            print(f"   {status_emoji} {session['name']}: {session['status']}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöó –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤ –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é\n")
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–º–µ–Ω—è–µ—Ç –≤–∞—à —Å—Ç–∞—Ä—ã–π downloader.ipynb\n")
    
    try:
        # –°–ø–æ—Å–æ–± 1: –ë–∞–∑–æ–≤—ã–π (–∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º —Å–∫—Ä–∏–ø—Ç–µ)
        basic_files = download_driving_tests_basic()
        
        # –°–ø–æ—Å–æ–± 2: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        advanced_result = download_driving_tests_advanced()
        
        # –°–ø–æ—Å–æ–± 3: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        params_result = download_with_parameters()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å–≤–æ–¥–∫—É
        show_final_summary()
        
        print("\nüéâ –í—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–∞—Ö:")
        print("   - ./data/driving_tests/ (–±–∞–∑–æ–≤—ã–π —Å–ø–æ—Å–æ–±)")
        print("   - ./data/driving_tests_advanced/ (–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–ø–æ—Å–æ–±)")
        print("   - ./data/driving_tests_parameters/ (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)")
        print("   - ./data/driving_tests_summary.csv (—Å–≤–æ–¥–∫–∞)")
        print("   - ./data/scraping_metadata.json (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)")
        
        print("\nüí° –¢–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–≥–æ downloader.ipynb –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   from tools.web_scraper import HTMLDownloader")
        print("   downloader = HTMLDownloader(base_url='...', save_path='...')")
        print("   downloader.download_multiple_pages(num_pages=50)")
        
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit(main())
