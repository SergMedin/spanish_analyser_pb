#!/usr/bin/env python3
"""
–î–µ–º–æ-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π Anki.

–ü–µ—Ä–µ–º–µ—â–∞—Ç—å –≤ examples/ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
"""

from spanish_analyser.anki_checker import check_anki_before_run
from spanish_analyser.config import config
from .practicatest_auth import PracticaTestAuth

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä–∞"""
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä–∞ practicatest.com\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ Anki
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Anki...")
    if not check_anki_before_run():
        print("‚ùå –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–æ.")
        return 1
    
    print("‚úÖ Anki –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä
    try:
        auth = PracticaTestAuth()
        
        print(f"\nüîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {auth.base_url}...")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
        if auth.login():
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
            session_info = auth.get_session_info()
            print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏:")
            print(f"   –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {session_info['is_authenticated']}")
            print(f"   URL —Ç–µ—Å—Ç–æ–≤: {session_info['tests_url']}")
            print(f"   –¢–∞–π–º–∞—É—Ç —Å–µ—Å—Å–∏–∏: {session_info['session_timeout']} —Å–µ–∫")
            
            if 'login_time' in session_info:
                print(f"   –í—Ä–µ–º—è –≤—Ö–æ–¥–∞: {session_info['login_time']}")
                print(f"   –í–æ–∑—Ä–∞—Å—Ç —Å–µ—Å—Å–∏–∏: {session_info['session_age']:.0f} —Å–µ–∫")
                print(f"   –°–µ—Å—Å–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞: {session_info['session_valid']}")
            
        else:
            print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
            return 1
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        auth.close()
        print("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
