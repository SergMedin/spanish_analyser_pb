#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ä–æ–≥–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ OpenAI API.
–ó–∞–º–µ–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.
"""

def fix_expensive_check():
    file_path = "src/spanish_analyser/tools/anki_deck_generator/anki_deck_maker.py"
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –¥–æ—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é
    old_check = '''    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ OpenAI API
    try:
        print("üîå –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å OpenAI API...")
        test_result = generate_front_and_back("test", front_text="test", model="gpt-3.5-turbo", pos="test")
        print("‚úÖ OpenAI API –¥–æ—Å—Ç—É–ø–µ–Ω")
    except QuotaExceededError as e:
        print(f"üí∞ {e}")
        print("\\nüîß –î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã:")
        print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ https://platform.openai.com/account/billing")
        print("   2. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–Ω")
        print("   3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è")
        return 1
    except Exception as e:
        # –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å - –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å–µ—Ç–∏
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å OpenAI API: {e}")
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å OpenAI API. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º (–≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)...")'''
    
    new_check = '''    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)
    print("üîå API –∫–ª—é—á OpenAI –Ω–∞–π–¥–µ–Ω")
    print("üí° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ")'''
    
    new_content = content.replace(old_check, new_check)
    
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±—Ä–∞–Ω–∞ –¥–æ—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API")

if __name__ == "__main__":
    fix_expensive_check()
