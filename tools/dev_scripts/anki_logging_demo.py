"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Anki –∑–∞–º–µ—Ç–æ–∫.

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –æ —Ç–æ–º, –∫–∞–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏ –ø–æ—á–µ–º—É.
"""

from spanish_analyser.components.anki_connector import AnkiConnector


def main():
    print("üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Anki –∑–∞–º–µ—Ç–æ–∫")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä
    connector = AnkiConnector()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not connector.is_available():
        print("‚ùå Anki –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ AnkiConnect –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Anki –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–ª–∞–≥–∏–Ω AnkiConnect –∞–∫—Ç–∏–≤–µ–Ω")
        return
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Anki —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    print("\nüîé –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ª–æ–≤–∞ –∏–∑ –∏—Å–ø–∞–Ω—Å–∫–∏—Ö –∫–æ–ª–æ–¥...")
    print("–¢–µ–ø–µ—Ä—å –≤—ã —É–≤–∏–¥–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –æ —Ç–æ–º, –∫–∞–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏ –ø–æ—á–µ–º—É:")
    print("-" * 60)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ª–æ–≤–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    words = connector.extract_all_spanish_words("Spanish*")
    
    print("-" * 60)
    print(f"üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: –∏–∑–≤–ª–µ—á–µ–Ω–æ {len(words)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤")
    
    if len(words) > 0:
        print(f"\nüìù –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–≤—ã—Ö 10 —Å–ª–æ–≤:")
        for i, word in enumerate(sorted(words)[:10], 1):
            print(f"  {i}. {word}")
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –¢–µ–ø–µ—Ä—å –≤—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–µ—Ç–µ, –ø–æ—á–µ–º—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ—Ç–∫–∏ –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏")


if __name__ == "__main__":
    main()
